<?xml version="1.0" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.jruby.joni</groupId>
  <artifactId>joni</artifactId>
  <packaging>jar</packaging>
  <version>2.1.15.SONATYPE-SNAPSHOT</version>
  <name>Joni</name>
  <description>
    Java port of Oniguruma: http://www.geocities.jp/kosako3/oniguruma
    that uses byte arrays directly instead of java Strings and chars
  </description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!--
    Deployment configuration. Default configuration is public.
    -->
    <public.serverId>sonatype-public</public.serverId>
    <public.nexusUrl>https://repository.sonatype.org</public.nexusUrl>

    <public-release.serverId>${public.serverId}</public-release.serverId>
    <public-release.url>
      https://repository.sonatype.org/service/local/staging/deploy/maven2
    </public-release.url>

    <public-snapshot.serverId>${public.serverId}</public-snapshot.serverId>
    <public-snapshot.url>
      https://repository.sonatype.org/content/repositories/snapshots
    </public-snapshot.url>

    <!--
    Staging configuration.
    -->
    <staging.serverId>${public.serverId}</staging.serverId>
    <staging.nexusUrl>${public.nexusUrl}</staging.nexusUrl>
    <staging.progressTimeout>15</staging.progressTimeout>
  </properties>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <issueManagement>
    <system>JIRA</system>
    <url>http://jira.codehaus.org/browse/JRUBY</url>
  </issueManagement>

  <scm>
    <connection>scm:git:git://github.com/sonatype/joni.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/sonatype/joni.git</developerConnection>
    <url>https://github.com/sonatype/joni</url>
  </scm>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <repositories>
    <repository>
      <id>codehaus</id>
      <name>Codehaus Repository</name>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>https://repository.codehaus.org</url>
    </repository>
  </repositories>

  <developers>
    <developer>
      <id>lopex</id>
      <name>Marcin Mielzynski</name>
      <email>lopx@gazeta.pl</email>
    </developer>
  </developers>

  <distributionManagement>
    <repository>
      <id>${public-release.serverId}</id>
      <url>${public-release.url}</url>
    </repository>

    <snapshotRepository>
      <id>${public-snapshot.serverId}</id>
      <url>${public-snapshot.url}</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencies>
    <dependency>
       <groupId>org.jruby.jcodings</groupId>
       <artifactId>jcodings</artifactId>
       <version>1.0.27</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>5.0.3</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <testSourceDirectory>test</testSourceDirectory>
    <!--<finalName>joni</finalName>-->
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav</artifactId>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.20.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <archive>
            <manifestFile>MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.1.2</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <show>private</show>
          <nohelp>true</nohelp>
          <additionalparam>-Xdoclint:none</additionalparam>
          <quiet>true</quiet>
        </configuration>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.6</version>
        <extensions>true</extensions>
        <configuration>
          <nexusUrl>${staging.nexusUrl}</nexusUrl>
          <serverId>${staging.serverId}</serverId>
          <altStagingDirectory>${staging.directory}</altStagingDirectory>
          <keepStagingRepositoryOnCloseRuleFailure>true</keepStagingRepositoryOnCloseRuleFailure>
          <stagingProgressTimeoutMinutes>${staging.progressTimeout}</stagingProgressTimeoutMinutes>
          <tags>
            <localUsername>${user.name}</localUsername>
            <javaVersion>${java.version}</javaVersion>
          </tags>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <skip>true</skip>
          <failIfMissing>false</failIfMissing>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>jacoco</id>
      <build>
        <plugins>
          <plugin>
             <groupId>org.jacoco</groupId>
             <artifactId>jacoco-maven-plugin</artifactId>
             <version>0.8.0</version>
             <configuration>
                <excludes>
                </excludes>
             </configuration>
             <executions>
                <execution>
                    <id>default-prepare-agent</id>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                   <id>pre-unit-test</id>
                   <goals>
                      <goal>prepare-agent</goal>
                   </goals>
                   <configuration>
                      <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
                      <propertyName>surefireArgLine</propertyName>
                   </configuration>
                </execution>
                <execution>
                   <id>post-unit-test</id>
                   <phase>test</phase>
                   <goals>
                      <goal>report</goal>
                   </goals>
                   <configuration>
                      <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                      <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                   </configuration>
                </execution>
                <execution>
                   <id>default-report</id>
                   <phase>prepare-package</phase>
                   <goals>
                      <goal>report</goal>
                   </goals>
                </execution>
             </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
